{
  "contractName": "EIP1167CloneFactory",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"To simply and cheaply clone contract functionality in an immutable way, this standard specifies a minimal bytecode implementation that delegates all calls to a known, fixed address. * https://eips.ethereum.org/EIPS/eip-1167\",\"methods\":{},\"title\":\"EIP 1167: Minimal Proxy Contract\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mehdi/code/dether/contractV2/contracts/eip1167/EIP1167CloneFactory.sol\":\"EIP1167CloneFactory\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mehdi/code/dether/contractV2/contracts/eip1167/EIP1167CloneFactory.sol\":{\"keccak256\":\"0x97d973416008968b0b6d4a84503fa5cb989020e5f8392005c22afc56b070518b\",\"urls\":[\"bzzr://88397914675cfe546992a93df599fb407823daa7d956a8d33aadb6714628a9bb\",\"dweb:/ipfs/QmXv3Uuc2wPPcedb85Me9eiADwSkhbSTjFXXipMiUKpVMP\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a72305820cbc984f65e95dd5a54f4e4eb8deb759e246f7e9a55971bdc08d5f16c262f74fc64736f6c634300050a0032",
  "deployedBytecode": "0x6080604052600080fdfea265627a7a72305820cbc984f65e95dd5a54f4e4eb8deb759e246f7e9a55971bdc08d5f16c262f74fc64736f6c634300050a0032",
  "sourceMap": "322:476:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;322:476:10;;;;;;;",
  "deployedSourceMap": "322:476:10:-;;;;;",
  "source": "pragma solidity ^0.5.10;\n\n/**\n * @title EIP 1167: Minimal Proxy Contract\n *\n * @dev To simply and cheaply clone contract functionality in an immutable way,\n * this standard specifies a minimal bytecode implementation that delegates\n * all calls to a known, fixed address.\n *\n * https://eips.ethereum.org/EIPS/eip-1167\n */\ncontract EIP1167CloneFactory {\n  function createClone(address target) internal returns (address result) {\n    bytes20 targetBytes = bytes20(target);\n    assembly {\n      let clone := mload(0x40)\n      mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n      mstore(add(clone, 0x14), targetBytes)\n      mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n      result := create(0, clone, 0x37)\n    }\n  }\n}\n",
  "sourcePath": "/Users/mehdi/code/dether/contractV2/contracts/eip1167/EIP1167CloneFactory.sol",
  "ast": {
    "absolutePath": "/Users/mehdi/code/dether/contractV2/contracts/eip1167/EIP1167CloneFactory.sol",
    "exportedSymbols": {
      "EIP1167CloneFactory": [
        2718
      ]
    },
    "id": 2719,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2702,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title EIP 1167: Minimal Proxy Contract\n * @dev To simply and cheaply clone contract functionality in an immutable way,\nthis standard specifies a minimal bytecode implementation that delegates\nall calls to a known, fixed address.\n * https://eips.ethereum.org/EIPS/eip-1167",
        "fullyImplemented": true,
        "id": 2718,
        "linearizedBaseContracts": [
          2718
        ],
        "name": "EIP1167CloneFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2716,
              "nodeType": "Block",
              "src": "426:370:10",
              "statements": [
                {
                  "assignments": [
                    2710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2710,
                      "name": "targetBytes",
                      "nodeType": "VariableDeclaration",
                      "scope": 2716,
                      "src": "432:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 2709,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "432:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2714,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2712,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2704,
                        "src": "462:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "454:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": "bytes20"
                    },
                    "id": 2713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "454:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "432:37:10"
                },
                {
                  "externalReferences": [
                    {
                      "result": {
                        "declaration": 2707,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "754:6:10",
                        "valueSize": 1
                      }
                    },
                    {
                      "targetBytes": {
                        "declaration": 2710,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "636:11:10",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2715,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let clone := mload(0x40)\n    mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n    mstore(add(clone, 0x14), targetBytes)\n    mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n    result := create(0, clone, 0x37)\n}",
                  "src": "475:317:10"
                }
              ]
            },
            "documentation": null,
            "id": 2717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createClone",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2704,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 2717,
                  "src": "376:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "375:16:10"
            },
            "returnParameters": {
              "id": 2708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2707,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 2717,
                  "src": "410:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:16:10"
            },
            "scope": 2718,
            "src": "355:441:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2719,
        "src": "322:476:10"
      }
    ],
    "src": "0:799:10"
  },
  "legacyAST": {
    "absolutePath": "/Users/mehdi/code/dether/contractV2/contracts/eip1167/EIP1167CloneFactory.sol",
    "exportedSymbols": {
      "EIP1167CloneFactory": [
        2718
      ]
    },
    "id": 2719,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2702,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title EIP 1167: Minimal Proxy Contract\n * @dev To simply and cheaply clone contract functionality in an immutable way,\nthis standard specifies a minimal bytecode implementation that delegates\nall calls to a known, fixed address.\n * https://eips.ethereum.org/EIPS/eip-1167",
        "fullyImplemented": true,
        "id": 2718,
        "linearizedBaseContracts": [
          2718
        ],
        "name": "EIP1167CloneFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2716,
              "nodeType": "Block",
              "src": "426:370:10",
              "statements": [
                {
                  "assignments": [
                    2710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2710,
                      "name": "targetBytes",
                      "nodeType": "VariableDeclaration",
                      "scope": 2716,
                      "src": "432:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 2709,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "432:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2714,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2712,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2704,
                        "src": "462:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "454:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": "bytes20"
                    },
                    "id": 2713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "454:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "432:37:10"
                },
                {
                  "externalReferences": [
                    {
                      "result": {
                        "declaration": 2707,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "754:6:10",
                        "valueSize": 1
                      }
                    },
                    {
                      "targetBytes": {
                        "declaration": 2710,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "636:11:10",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2715,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let clone := mload(0x40)\n    mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n    mstore(add(clone, 0x14), targetBytes)\n    mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n    result := create(0, clone, 0x37)\n}",
                  "src": "475:317:10"
                }
              ]
            },
            "documentation": null,
            "id": 2717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createClone",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2704,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 2717,
                  "src": "376:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "375:16:10"
            },
            "returnParameters": {
              "id": 2708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2707,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 2717,
                  "src": "410:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:16:10"
            },
            "scope": 2718,
            "src": "355:441:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2719,
        "src": "322:476:10"
      }
    ],
    "src": "0:799:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-05T13:10:44.036Z",
  "devdoc": {
    "details": "To simply and cheaply clone contract functionality in an immutable way, this standard specifies a minimal bytecode implementation that delegates all calls to a known, fixed address. * https://eips.ethereum.org/EIPS/eip-1167",
    "methods": {},
    "title": "EIP 1167: Minimal Proxy Contract"
  },
  "userdoc": {
    "methods": {}
  }
}